@using Microsoft.AspNetCore.Identity
@using Data.Entities
@using Business.Interfaces

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IIndentityService indentityService

@{
    var users = indentityService.GetAll();
    var user = users.Where(u => u.Email == User.Identity.Name).FirstOrDefault();

}

<ul class="navbar-nav"> 
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @if(@user!= null)
            {
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @user.FirstName @user.LastName </a>
            }
    </li>

    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-secondary">Logout</button>
        </form>
    </li>

    
}
else
{
    <li class="nav-item">
            <a class="nav-item nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>           
    </li>
    <li class="nav-item">
        <a class="nav-item nav-link" id="login" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
}
</ul>
